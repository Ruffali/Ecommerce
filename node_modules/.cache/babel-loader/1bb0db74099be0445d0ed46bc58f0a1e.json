{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\commerce_app\\\\src\\\\containers\\\\LoginRight\\\\LoginRight.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { InputStyle, ButtonStyle, FormGroupStyle, ErrorPart } from \"../../components/styled\";\nimport { EMAIL_REGEX, PASSWORD_REGEX } from \"../../regex\";\nimport { AiTwotoneEye, AiTwotoneEyeInvisible } from \"react-icons/ai\"; // Login Background Part\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRightContainer = styled.div`\n  width: calc(100% / 3);\n  height: 100%;\n  background-color: #ffffff;\n  padding: 0 50px;\n  padding-top: 10vw;\n  form {\n  }\n`;\n_c = LoginRightContainer;\nconst LoginRightHeader = styled.h1`\n  font-size: 2vw;\n  text-transform: uppercase;\n  font-weight: 600;\n  margin-bottom: 25px;\n  color: #2676ee;\n`;\n_c2 = LoginRightHeader;\nexport const LoginRight = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(LoginRightContainer, {\n    children: [/*#__PURE__*/_jsxDEV(LoginRightHeader, {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormGroupStyle, {\n        width: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(InputStyle, {\n          font_size: \"sm\",\n          icon: \"email\",\n          placeholder: \"Email\",\n          type: \"text\",\n          ...register(\"email\", {\n            validate: value => EMAIL_REGEX.test(value) ? null : \"Email pattern is wrong.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupStyle, {\n        width: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(InputStyle, {\n          font_size: \"md\",\n          icon: \"password\",\n          placeholder: \"Password\",\n          type: showPassword ? \"text\" : \"password\",\n          ...register(\"password\", {\n            validate: value => PASSWORD_REGEX.test(value) ? null : \"Password pattern is wrong.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowPassword(prev => !prev),\n          children: showPassword ? /*#__PURE__*/_jsxDEV(AiTwotoneEyeInvisible, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(AiTwotoneEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(ErrorPart, {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroupStyle, {\n        width: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(InputStyle, {\n          font_size: \"lg\",\n          icon: \"password\",\n          placeholder: \"Repeat password\",\n          type: showPassword ? \"text\" : \"password\",\n          ...register(\"password_repeat\", {\n            validate: value => value === password.current || \"The passwords do not match\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setShowPassword(prev => !prev),\n          children: showPassword ? /*#__PURE__*/_jsxDEV(AiTwotoneEyeInvisible, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(AiTwotoneEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), errors.password_repeat && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password_repeat.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        type: \"submit\",\n        width: \"lg\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginRight, \"ZN1upqrnSrBBzlTBtvk2JEn0w1o=\", false, function () {\n  return [useForm];\n});\n\n_c3 = LoginRight;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginRightContainer\");\n$RefreshReg$(_c2, \"LoginRightHeader\");\n$RefreshReg$(_c3, \"LoginRight\");","map":{"version":3,"sources":["C:/Users/LENOVO/OneDrive/Desktop/commerce_app/src/containers/LoginRight/LoginRight.js"],"names":["React","useRef","useForm","styled","InputStyle","ButtonStyle","FormGroupStyle","ErrorPart","EMAIL_REGEX","PASSWORD_REGEX","AiTwotoneEye","AiTwotoneEyeInvisible","LoginRightContainer","div","LoginRightHeader","h1","LoginRight","register","handleSubmit","watch","formState","errors","showPassword","setShowPassword","useState","password","current","onSubmit","data","console","log","validate","value","test","email","message","prev","password_repeat"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  InputStyle,\r\n  ButtonStyle,\r\n  FormGroupStyle,\r\n  ErrorPart\r\n} from \"../../components/styled\";\r\nimport { EMAIL_REGEX, PASSWORD_REGEX } from \"../../regex\";\r\nimport { AiTwotoneEye, AiTwotoneEyeInvisible } from \"react-icons/ai\";\r\n\r\n// Login Background Part\r\nconst LoginRightContainer = styled.div`\r\n  width: calc(100% / 3);\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  padding: 0 50px;\r\n  padding-top: 10vw;\r\n  form {\r\n  }\r\n`;\r\n\r\nconst LoginRightHeader = styled.h1`\r\n  font-size: 2vw;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n  color: #2676ee;\r\n`;\r\n\r\nexport const LoginRight = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  return (\r\n    <LoginRightContainer>\r\n      <LoginRightHeader>Login</LoginRightHeader>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroupStyle width={\"sm\"}>\r\n          <InputStyle\r\n            font_size={\"sm\"}\r\n            icon={\"email\"}\r\n            placeholder=\"Email\"\r\n            type=\"text\"\r\n            {...register(\"email\", {\r\n              validate: (value) =>\r\n                EMAIL_REGEX.test(value) ? null : \"Email pattern is wrong.\",\r\n            })}\r\n          />\r\n          {errors.email && <p>{errors.email.message}</p>}\r\n        </FormGroupStyle>\r\n        <FormGroupStyle width={\"md\"}>\r\n          <InputStyle\r\n            font_size={\"md\"}\r\n            icon={\"password\"}\r\n            placeholder=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            {...register(\"password\", {\r\n              validate: (value) =>\r\n                PASSWORD_REGEX.test(value)\r\n                  ? null\r\n                  : \"Password pattern is wrong.\",\r\n            })}\r\n          />\r\n          <span onClick={() => setShowPassword((prev) => !prev)}>\r\n            {showPassword ? <AiTwotoneEyeInvisible /> : <AiTwotoneEye />}\r\n          </span>\r\n          {errors.password && <ErrorPart>{errors.password.message}</ErrorPart>}\r\n        </FormGroupStyle>\r\n        <FormGroupStyle width={\"lg\"}>\r\n          <InputStyle\r\n            font_size={\"lg\"}\r\n            icon={\"password\"}\r\n            placeholder=\"Repeat password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            {...register(\"password_repeat\", {\r\n              validate: (value) =>\r\n                value === password.current || \"The passwords do not match\",\r\n            })}\r\n          />\r\n          <span onClick={() => setShowPassword((prev) => !prev)}>\r\n            {showPassword ? <AiTwotoneEyeInvisible /> : <AiTwotoneEye />}\r\n          </span>\r\n          {errors.password_repeat && <p>{errors.password_repeat.message}</p>}\r\n        </FormGroupStyle>\r\n        <ButtonStyle type=\"submit\" width={\"lg\"}>\r\n          Login\r\n        </ButtonStyle>\r\n      </form>\r\n    </LoginRightContainer>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}