{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\commerce_app\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useMemo, useCallback, useState, memo } from \"react\";\nimport { usePrevious, useMemoCompare } from \"../hooks\";\nimport { FormErrorMessage, StatusStyled } from \"../components/styled\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\nimport { EMAIL_REGEX, PASSWORD_REGEX } from \"../regex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InnerStatusStyled = styled(StatusStyled)`\n  margin-left: 15px;\n`;\nconst FormContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 100px;\n  width: 100%;\n\n  h2 {\n    font-size: 22px;\n    font-weight: 500;\n    text-align: center;\n  }\n\n  form {\n    width: 100%;\n  }\n`;\n_c = FormContainer;\n\nconst getData = email => {\n  console.log(\"Email in getData:\", email);\n  console.log(\"getData called\");\n  return {\n    id: 1\n  };\n};\n\nexport const Login = /*#__PURE__*/memo(_c2 = _s(({\n  bool,\n  onClick\n}) => {\n  var _formMethods$formStat, _formMethods$formStat2, _formMethods$formStat3, _formMethods$formStat4;\n\n  _s();\n\n  const [email, changeEmail] = useState(\"\");\n  const [pwd, changePwd] = useState(\"\"); // const previousValue = usePrevious(value);\n  // const memorizedData = useMemoCompare(\n  //   value,\n  //   (prev, next) => prev && prev.id === next.id\n  // );\n\n  console.log(\"App runned\");\n  const formMethods = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  });\n  const handleSubmit = formMethods.handleSubmit(data => {\n    console.log(data);\n  }); // useEffect(() => {\n  //   console.log(\"Login: \", memorizedData);\n  // }, [memorizedData]);\n\n  useEffect(() => {\n    console.log(bool);\n  }, [bool]);\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"email\",\n          type: \"text\",\n          value: email // {...formMethods.register(\"email\", {\n          //   validate: (value) =>\n          //     EMAIL_REGEX.test(value) ? null : \"Email pattern is wrong.\",\n          // })}\n          ,\n          onChange: event => changeEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          hasError: (_formMethods$formStat = formMethods.formState.errors.email) === null || _formMethods$formStat === void 0 ? void 0 : _formMethods$formStat.message,\n          children: (_formMethods$formStat2 = formMethods.formState.errors.email) === null || _formMethods$formStat2 === void 0 ? void 0 : _formMethods$formStat2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Passowrd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"passowrd\",\n          type: \"password\",\n          value: pwd // {...formMethods.register(\"password\", {\n          //   validate: (value) =>\n          //     PASSWORD_REGEX.test(value)\n          //       ? null\n          //       : \"Password pattern is wrong.\",\n          // })}\n          ,\n          onChange: event => changePwd(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          hasError: (_formMethods$formStat3 = formMethods.formState.errors.password) === null || _formMethods$formStat3 === void 0 ? void 0 : _formMethods$formStat3.message,\n          children: (_formMethods$formStat4 = formMethods.formState.errors.password) === null || _formMethods$formStat4 === void 0 ? void 0 : _formMethods$formStat4.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}, \"1hKlepQJEdXJADlnYBznl5Cy978=\", false, function () {\n  return [useForm];\n}));\n_c3 = Login;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"Login$memo\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["C:/Users/LENOVO/OneDrive/Desktop/commerce_app/src/pages/Login.js"],"names":["styled","React","useEffect","useMemo","useCallback","useState","memo","usePrevious","useMemoCompare","FormErrorMessage","StatusStyled","Button","Form","useForm","EMAIL_REGEX","PASSWORD_REGEX","InnerStatusStyled","FormContainer","div","getData","email","console","log","id","Login","bool","onClick","changeEmail","pwd","changePwd","formMethods","reValidateMode","defaultValues","password","handleSubmit","data","event","target","value","formState","errors","message"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useEffect, useMemo, useCallback, useState, memo } from \"react\";\r\nimport { usePrevious, useMemoCompare } from \"../hooks\";\r\nimport { FormErrorMessage, StatusStyled } from \"../components/styled\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { EMAIL_REGEX, PASSWORD_REGEX } from \"../regex\";\r\n\r\nconst InnerStatusStyled = styled(StatusStyled)`\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 100px;\r\n  width: 100%;\r\n\r\n  h2 {\r\n    font-size: 22px;\r\n    font-weight: 500;\r\n    text-align: center;\r\n  }\r\n\r\n  form {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst getData = (email) => {\r\n  console.log(\"Email in getData:\", email);\r\n  console.log(\"getData called\");\r\n\r\n  return {\r\n    id: 1,\r\n  };\r\n};\r\n\r\nexport const Login = memo(({ bool, onClick }) => {\r\n  const [email, changeEmail] = useState(\"\");\r\n  const [pwd, changePwd] = useState(\"\");\r\n  // const previousValue = usePrevious(value);\r\n\r\n  // const memorizedData = useMemoCompare(\r\n  //   value,\r\n  //   (prev, next) => prev && prev.id === next.id\r\n  // );\r\n\r\n  console.log(\"App runned\");\r\n\r\n  const formMethods = useForm({\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: { email: \"\", password: \"\" },\r\n  });\r\n\r\n  const handleSubmit = formMethods.handleSubmit((data) => {\r\n    console.log(data);\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Login: \", memorizedData);\r\n  // }, [memorizedData]);\r\n\r\n  useEffect(() => {\r\n    console.log(bool);\r\n  }, [bool]);\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={handleSubmit}>\r\n        <h2>Login</h2>\r\n        {/* <StatusStyled email={email} size=\"md\" /> */}\r\n        {/* <InnerStatusStyled email={email} size=\"lg\" /> */}\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            placeholder=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            // {...formMethods.register(\"email\", {\r\n            //   validate: (value) =>\r\n            //     EMAIL_REGEX.test(value) ? null : \"Email pattern is wrong.\",\r\n            // })}\r\n            onChange={(event) => changeEmail(event.target.value)}\r\n          />\r\n          <FormErrorMessage\r\n            hasError={formMethods.formState.errors.email?.message}\r\n          >\r\n            {formMethods.formState.errors.email?.message}\r\n          </FormErrorMessage>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Passowrd</label>\r\n          <input\r\n            placeholder=\"passowrd\"\r\n            type=\"password\"\r\n            value={pwd}\r\n            // {...formMethods.register(\"password\", {\r\n            //   validate: (value) =>\r\n            //     PASSWORD_REGEX.test(value)\r\n            //       ? null\r\n            //       : \"Password pattern is wrong.\",\r\n            // })}\r\n            onChange={(event) => changePwd(event.target.value)}\r\n          />\r\n          <FormErrorMessage\r\n            hasError={formMethods.formState.errors.password?.message}\r\n          >\r\n            {formMethods.formState.errors.password?.message}\r\n          </FormErrorMessage>\r\n        </Form.Field>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n      <button onClick={onClick}></button>\r\n    </FormContainer>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}